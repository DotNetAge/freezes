{
  "body": "\nGetting Freezes installed and ready-to-go should only take a few minutes. If it ever becomes a pain in the ass, please file an issue (or submit a pull request) describing the issue you encountered and how we might make the process easier.\n\n\n## Requirements\n\nInstalling Freezes is easy and straight-forward, but there are a few requirements you\u2019ll need to make sure your system has before you start.\n\n- [Python](www.python.org)\n- [pip](https://pip.pypa.io/en/latest/installing.html)\n- virtualenv\n- Linux, Unix, or Mac OS X\n- [CoffeeScript](http://coffeescript.org)\n- [Less](http://lesscss.org)\n- [Sass](http://sass-lang.com)  (Optional, for Sass support).\n\n## virtualenv\n\nVirtualenv is probably what you want to use during development, and if you have shell access to your production machines, you\u2019ll probably want to use it there, too.\n\nWhat problem does virtualenv solve? If you like Python as much as I do, chances are you want to use it for other projects besides Flask-based web applications. But the more projects you have, the more likely it is that you will be working with different versions of Python itself, or at least different versions of Python libraries. Let\u2019s face it: quite often libraries break backwards compatibility, and it\u2019s unlikely that any serious application will have zero dependencies. So what do you do if two or more of your projects have conflicting dependencies?\n\nVirtualenv to the rescue! Virtualenv enables multiple side-by-side installations of Python, one for each project. It doesn\u2019t actually install separate copies of Python, but it does provide a clever way to keep different project environments isolated. Let\u2019s see how virtualenv works.\n\nIf you are on Mac OS X or Linux, chances are that one of the following two commands will work for you:\n\n```bash\n$ sudo easy_install virtualenv\n```\nor even better:\n\n```bash\n$ sudo pip install virtualenv\n```\n\nOne of these will probably install virtualenv on your system. Maybe it\u2019s even in your package manager. If you use Ubuntu, try:\n\n```bash\n$ sudo apt-get install python-virtualenv\n```\n\nIf you are on Windows and don\u2019t have the easy_install command, you must install it first.  Once you have it installed, run the same commands as above, but without the sudo prefix.\n\n\n## Less \nBy default Freezes use the less to write stylesheets. So that you need to install the less compiler before you run Freezes.\n\nThe easiest way to install Less on the server, is via npm, the node.js package manager, as so:\n\n```bash\n$ npm install -g less\n```\n\nIf you want to use css you can change the assets ( `your-website-root/_assets.yml`) configurations like below:\n\n```yml\ncss:\n    output: \"your-website-root/site.min.css\"\n    contents: \"your-website-root/styles/*.css\"\n    filters: cssprefixer,cssmin\n```\n\n## CoffeeScript\n\nFreezes use CoffeeScript to instead javascript that you also need to install the coffeescript compiler before your run.\n\n```bash\n$ npm install -g coffee-script\n```\n\nTo disable the CoffeeScript you should try to change the assets configurations like below:\n\n```yml\njs:\n    output: \"your-website-root/site.min.js\"\n    contents: \"your-website-root/scripts/*.js\"\n    filters: jsmin\n```\n \n", 
  "created": "Mon, 30 Mar 2015 01:28:53 GMT", 
  "excerpt": "<p>Getting Freezes installed and ready-to-go should only take a few minutes. If it ever becomes a pain in the ass, please file an issue (or submit a pull request) describing the issue you encountered and how we might make the process easier.</p>", 
  "id": 1, 
  "last_updated": "Mon, 30 Mar 2015 01:28:53 GMT", 
  "meta": {
    "id": 1, 
    "title": "Installation"
  }, 
  "name": "requirements-installed", 
  "pages": [], 
  "path": "documents/quick-started/requirements-installed", 
  "published": "Mon, 30 Mar 2015 01:28:53 GMT", 
  "tags": [], 
  "url": "/documents/quick-started/requirements-installed/"
}